import json
import operator
import functions
from tqdm import tqdm



if __name__ == '__main__':
    """args = sys.argv
    directory = args[1]"""
    workspace = "/Users/yousefalbunni/Desktop/bsc-yossef-al-buni/Code/workspace.txt"

    with open(workspace, 'w') as file:
        file.truncate(0)
    for directory_num in range(1, 3):
        print(f"prompt {directory_num}")
        directory = str(directory_num)
        result_csv = "/Users/yousefalbunni/Desktop/bsc-yossef-al-buni/Code/output_" + directory + "/part_result.csv"
        analysis_json = "/Users/yousefalbunni/Desktop/bsc-yossef-al-buni/Code/output_" + directory + "/analysis_output.json"
        tf_idf_result = "/Users/yousefalbunni/Desktop/bsc-yossef-al-buni/Code/output_" + directory + "/TF_IDF_results.txt"
        # functions.metrics(result_csv, True)
        # functions.statistic(analysis_json, True)
        # functions.statistic(analysis_json, False)
        # print("here comes vulnerable \n")
        # functions.calc_statistics(analysis_json, True)
        # print("here comes fixed \n")
        # functions.calc_statistics(analysis_json, False)
        #functions.general_tf_idf(analysis_json)
        num = 0
        word_count = []
        with open(analysis_json, "r") as file:
            data = json.load(file)
        sorted_data = sorted(data, key=operator.itemgetter('cwe_id'))
        for d in sorted_data:
            if d['cwe_hint_found_fix'] == 'Yes':
                print(d['case'])
                print(d['cwe_id'])
                print(d['cwe_hint_found_vul'] + "/" + d['cwe_hint_found_fix'])
                print(int(d['word_count_fix']) - int(d['word_count_vul']))
                print("\n")
        """with open(workspace, "a") as file:
            file.write(f"\n\n\n\n\nPrompt {directory_num}\n\n")
            for d in sorted_data:
                if d['cwe_hint_found_vul'] == 'No' and d['cwe_hint_found_fix'] == 'Yes':
                    file.write('Case: ' + d['case'] + '\n\n')
                    file.write('cwe_id: ' + d['cwe_id'] + '\n\n')
                    file.write('cwe_name: ' + d['cwe_name'] + '\n\n')
                    file.write('vuln_id: ' + d['vuln_id'] + '\n\n')
                    file.write('desc: ' + d['desc'] + '\n\n')

                    file.write(
                        '\n----------- This is the vulnerable version ' + ' ( case: ' + d['case'] + ') -----------\n\n')
                    #formatted_string = textwrap.dedent(d['method_before']).strip()
                    file.write(d['method_before'] + '\n\n')
                    #formatted_string = textwrap.dedent(d['gpt_review_before']).strip()
                    file.write(d['gpt_review_before'] + '\n\n')
                    file.write('Vulnerability flag: ' + d['cwe_hint_found_vul'] + '\n\n')
                    file.write('Word count = ' + d['word_count_vul'] + '\n')
                    file.write('Word count without stopwords = ' + d['no_stopwords_word_count_vul'] + '\n')
                    file.write('Sentence count = ' + d['sentence_count_vul'] + '\n')
                    file.write('Readability score = ' + d['readability_score_vul'] + '\n')
                    file.write('The size of the code = ' + d['code_size_vul'] + '\n\n')

                    file.write(
                        '\n----------- This is the fixed version ' + ' ( case: ' + d['case'] + ') -----------\n\n')
                    #formatted_string = textwrap.dedent(d['method_after']).strip()
                    file.write(d['method_after'] + '\n\n')
                    #formatted_string = textwrap.dedent(d['gpt_review_after']).strip()
                    file.write(d['gpt_review_after'] + '\n\n')
                    file.write('Vulnerability flag: ' + d['cwe_hint_found_fix'] + '\n\n')
                    file.write('Word count = ' + d['word_count_fix'] + '\n')
                    file.write('Word count without stopwords = ' + d['no_stopwords_word_count_fix'] + '\n')
                    file.write('Sentence count = ' + d['sentence_count_fix'] + '\n')
                    file.write('Readability score = ' + d['readability_score_fix'] + '\n')
                    file.write('The size of the code = ' + d['code_size_fix'] + '\n\n')

                    file.write('Text Similarity = ' + d['text_similarity'] + '\n\n')
                    file.write('Character difference = ' + d['char_diff'] + '\n\n')
                    file.write('Number of similar sentences = ' + d['similar_sentences'] + '\n\n')
                    file.write('TF_IDF matrix = \n')
                    file.write( d['TF-IDF'] + '\n\n')
                    file.write('\n\n\n\n')
                    num += 1"""



